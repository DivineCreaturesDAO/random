{"version":3,"sources":["components/LineChart.tsx","components/ChainStats.tsx","components/transactions/TransactionCard.tsx","components/transactions/TransactionsFeed.tsx","components/realms/RealmCard.tsx","components/realms/RealmsFeed.tsx","pages/Main.tsx","pages/Transactions.tsx","pages/Realms.tsx","pages/Addresses.tsx","components/AppHeader.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["chartData","options","chart","id","toolbar","show","zoom","enabled","tooltip","xaxis","categories","title","text","series","data","LineChart","react_default","a","createElement","Grid","item","react_apexcharts_min_default","type","width","height","ChainStats","container","direction","spacing","xs","Divider","sx","marginLeft","marginRight","orientation","alignItems","components_LineChart","TransactionCard","transaction","justifyContent","alignContent","Receipt_default","fontSize","Typography","variant","component","Link","to","concat","hash","time","from","value","transactions","TransactionsFeed","color","map","val","idx","key","RealmCard","realm","Hub_default","name","numOfValidators","uniqueAddresses","activeAddresses","transactionsPerSecond","realms","RealmsFeed","overflow","Main","components_ChainStats","transactions_TransactionsFeed","realms_RealmsFeed","timeStamp","Date","now","status","txFee","gasPrice","Transactions","useParams","timeToFinality","validatorsActions","validatorName","validatorAction","validators","Realms","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","address","balance","tokens","amount","Addresses","Select","token","MenuItem","Number","toFixed","AppHeader","_useState","useState","_useState2","Object","slicedToArray","setTime","useEffect","setInterval","marginBottom","Button","App","Container","maxWidth","react_router_dom","components_AppHeader","react_router","path","element","pages_Main","pages_Transactions","pages_Addresses","pages_Realms","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.52613180.chunk.js","sourcesContent":["import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Grid } from \"@mui/material\";\n\nconst chartData = {\n  options: {\n    chart: {\n      id: \"transactions-history-chart\",\n      toolbar: {\n        show: false,\n      },\n      zoom: {\n        enabled: false,\n      },\n    },\n    tooltip: {\n      enabled: false,\n    },\n    xaxis: {\n      categories: [\n        \"01.06\",\n        \"01.07\",\n        \"01.08\",\n        \"01.09\",\n        \"01.10\",\n        \"01.11\",\n        \"01.12\",\n      ],\n    },\n    title: {\n      text: \"Transactions history\",\n    },\n  },\n  series: [\n    {\n      data: [100, 120, 80, 150, 130, 170, 200],\n    },\n  ],\n};\n\nconst LineChart = () => {\n  return (\n    <Grid item>\n      <Chart\n        options={chartData.options}\n        series={chartData.series}\n        type=\"line\"\n        width=\"350\"\n        height=\"150\"\n      />\n    </Grid>\n  );\n};\n\nexport default LineChart;\n","import React from \"react\";\nimport { Grid, Divider } from \"@mui/material\";\nimport LineChart from \"./LineChart\";\n\nconst ChainStats = () => {\n  return (\n    <Grid container direction=\"column\" spacing={3}>\n      <Grid item container>\n        <Grid item xs={3} container direction=\"column\" spacing={2}>\n          <Grid item container direction=\"column\" spacing={1}>\n            <Grid item>Price</Grid>\n            <Grid item>$100</Grid>\n          </Grid>\n          <Grid item>\n            <Divider />\n          </Grid>\n          <Grid item container direction=\"column\" spacing={1}>\n            <Grid item>Market cap</Grid>\n            <Grid item>$100,000,000</Grid>\n          </Grid>\n        </Grid>\n        <Grid item sx={{ marginLeft: \"3vw\", marginRight: \"3vw\" }}>\n          <Divider orientation=\"vertical\" />\n        </Grid>\n        <Grid item xs={3} container direction=\"column\" spacing={2}>\n          <Grid item container>\n            <Grid item xs={6} container direction=\"column\" spacing={1}>\n              <Grid item>Transactions</Grid>\n              <Grid item>100,000 (10,000 TPS)</Grid>\n            </Grid>\n            <Grid\n              item\n              xs={6}\n              container\n              direction=\"column\"\n              spacing={1}\n              alignItems={\"flex-end\"}\n            >\n              <Grid item>Gas price</Grid>\n              <Grid item>0.0001</Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Divider />\n          </Grid>\n          <Grid item container>\n            <Grid item xs={6} container direction=\"column\" spacing={1}>\n              <Grid item>Time to finality</Grid>\n              <Grid item>0.701 sec</Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item sx={{ marginLeft: \"3vw\", marginRight: \"3vw\" }}>\n          <Divider orientation=\"vertical\" />\n        </Grid>\n        <Grid item xs={3} container alignItems={\"center\"}>\n          <LineChart />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ChainStats;\n","import React from \"react\";\nimport ReceiptIcon from \"@mui/icons-material/Receipt\";\nimport { Grid, Typography } from \"@mui/material/\";\nimport { Link } from \"react-router-dom\";\n\nexport interface iTransactionCard {\n  hash: string;\n  time: number;\n  from: string;\n  to: string;\n  value: number;\n}\n\nexport const TransactionCard = (transaction: iTransactionCard) => {\n  return (\n    <Grid container direction=\"row\">\n      <Grid\n        item\n        xs={1}\n        container\n        justifyContent={\"center\"}\n        alignContent={\"center\"}\n      >\n        <ReceiptIcon fontSize=\"large\" />\n      </Grid>\n      <Grid item xs={4} container direction=\"column\">\n        <Grid item>\n          <Typography\n            variant=\"body1\"\n            component={Link}\n            to={`/tx/${transaction.hash}`}\n          >\n            {transaction.hash}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body2\">{transaction.time} secs ago</Typography>\n        </Grid>\n      </Grid>\n      <Grid item xs={5} container direction=\"column\">\n        <Grid item container spacing={1}>\n          <Grid item>\n            <Typography variant=\"body1\">From: </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"body1\"\n              component={Link}\n              to={`/random/addr/${transaction.from}`}\n            >\n              {transaction.from}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid item container spacing={1}>\n          <Grid item>\n            <Typography variant=\"body1\">To: </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"body1\"\n              component={Link}\n              to={`/random/addr/${transaction.to}`}\n            >\n              {transaction.to}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={2} container justifyContent=\"center\" alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"body1\">{transaction.value} MIND</Typography>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TransactionCard;\n","import React from \"react\";\nimport { Grid, Typography, Divider } from \"@mui/material\";\nimport { TransactionCard, iTransactionCard } from \"./TransactionCard\";\n\nconst transactions: iTransactionCard[] = [\n  {\n    hash: \"0x00\",\n    time: 1,\n    from: \"0x01\",\n    to: \"0x02\",\n    value: 0.1,\n  },\n  {\n    hash: \"0x00\",\n    time: 1,\n    from: \"0x01\",\n    to: \"0x02\",\n    value: 0.1,\n  },\n  {\n    hash: \"0x00\",\n    time: 1,\n    from: \"0x01\",\n    to: \"0x02\",\n    value: 0.1,\n  },\n  {\n    hash: \"0x00\",\n    time: 1,\n    from: \"0x01\",\n    to: \"0x02\",\n    value: 0.1,\n  },\n  {\n    hash: \"0x00\",\n    time: 1,\n    from: \"0x01\",\n    to: \"0x02\",\n    value: 0.1,\n  },\n  {\n    hash: \"0x00\",\n    time: 1,\n    from: \"0x01\",\n    to: \"0x02\",\n    value: 0.1,\n  },\n  {\n    hash: \"0x00\",\n    time: 1,\n    from: \"0x01\",\n    to: \"0x02\",\n    value: 0.1,\n  },\n  {\n    hash: \"0x00\",\n    time: 1,\n    from: \"0x01\",\n    to: \"0x02\",\n    value: 0.1,\n  },\n];\n\nconst TransactionsFeed = () => {\n  return (\n    <Grid container direction=\"column\" spacing={2}>\n      <Grid item>\n        <Typography variant=\"h5\" color=\"initial\">\n          Recent Transaction\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Divider />\n      </Grid>\n      {transactions.map((val, idx) => (\n        <Grid item key={`transatctionCard-${idx}`}>\n          {TransactionCard(val)}\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default TransactionsFeed;\n","import React from \"react\";\nimport HubIcon from \"@mui/icons-material/Hub\";\nimport { Grid, Typography } from \"@mui/material/\";\nimport { Link } from \"react-router-dom\";\n\nexport interface iRealmCard {\n  name: string;\n  numOfValidators: number;\n  transactionsPerSecond: number;\n  uniqueAddresses: number;\n  activeAddresses: number;\n}\n\nexport const RealmCard = (realm: iRealmCard) => {\n  return (\n    <Grid container direction=\"row\">\n      <Grid\n        item\n        xs={1}\n        container\n        justifyContent={\"center\"}\n        alignContent={\"center\"}\n      >\n        <HubIcon fontSize=\"large\" />\n      </Grid>\n      <Grid item xs={4} container direction=\"column\">\n        <Grid item>\n          <Typography\n            variant=\"body1\"\n            component={Link}\n            to={`/random/rlm/${realm.name}`}\n          >\n            {realm.name}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body2\">\n            {realm.numOfValidators} validators\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid item xs={5} container direction=\"column\">\n        <Grid item container>\n          <Grid item>\n            <Typography variant=\"body1\">Unique users: </Typography>\n          </Grid>\n          <Grid item>\n            {/* Might make a link to the addresses on realms tab */}\n            <Typography variant=\"body1\">{realm.uniqueAddresses}</Typography>\n          </Grid>\n        </Grid>\n        <Grid item container>\n          <Grid item>\n            <Typography variant=\"body1\">Active users: </Typography>\n          </Grid>\n          <Grid item>\n            {/* Might make a link to the addresses on realms tab */}\n            <Typography variant=\"body1\">{realm.activeAddresses}</Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={2} container justifyContent=\"center\" alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"body1\">\n            TPS: {realm.transactionsPerSecond}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default RealmCard;\n","import React from \"react\";\nimport { Grid, Typography, Divider } from \"@mui/material\";\nimport { RealmCard, iRealmCard } from \"./RealmCard\";\n\nconst realms: iRealmCard[] = [\n  {\n    name: \"Runtera\",\n    numOfValidators: 10,\n    transactionsPerSecond: 4890,\n    uniqueAddresses: 1000,\n    activeAddresses: 500,\n  },\n  {\n    name: \"Runtera\",\n    numOfValidators: 10,\n    transactionsPerSecond: 4890,\n    uniqueAddresses: 1000,\n    activeAddresses: 500,\n  },\n  {\n    name: \"Runtera\",\n    numOfValidators: 10,\n    transactionsPerSecond: 4890,\n    uniqueAddresses: 1000,\n    activeAddresses: 500,\n  },\n  {\n    name: \"Runtera\",\n    numOfValidators: 10,\n    transactionsPerSecond: 4890,\n    uniqueAddresses: 1000,\n    activeAddresses: 500,\n  },\n  {\n    name: \"Runtera\",\n    numOfValidators: 10,\n    transactionsPerSecond: 4890,\n    uniqueAddresses: 1000,\n    activeAddresses: 500,\n  },\n  {\n    name: \"Runtera\",\n    numOfValidators: 10,\n    transactionsPerSecond: 4890,\n    uniqueAddresses: 1000,\n    activeAddresses: 500,\n  },\n  {\n    name: \"Runtera\",\n    numOfValidators: 10,\n    transactionsPerSecond: 4890,\n    uniqueAddresses: 1000,\n    activeAddresses: 500,\n  },\n  {\n    name: \"Runtera\",\n    numOfValidators: 10,\n    transactionsPerSecond: 4890,\n    uniqueAddresses: 1000,\n    activeAddresses: 500,\n  },\n];\n\nconst RealmsFeed = () => {\n  return (\n    <Grid container direction=\"column\" spacing={2} sx={{ overflow: \"auto\" }}>\n      <Grid item>\n        <Typography variant=\"h5\" color=\"initial\">\n          Active Realms\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Divider />\n      </Grid>\n      {realms.map((val, idx) => (\n        <Grid item key={`realmCard-${idx}`}>\n          {RealmCard(val)}\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default RealmsFeed;\n","import React from \"react\";\nimport ChainStats from \"../components/ChainStats\";\nimport TransactionsFeed from \"../components/transactions/TransactionsFeed\";\nimport RealmsFeed from \"../components/realms/RealmsFeed\";\nimport ValidatorsFeed from \"../components/validators/ValidatorsFeed\";\nimport { Grid } from \"@mui/material\";\n\nconst Main = () => {\n  return (\n    <Grid container direction=\"column\">\n      <Grid item>\n        <ChainStats />\n      </Grid>\n      <Grid item container spacing={5}>\n        <Grid item xs={6}>\n          <TransactionsFeed />\n        </Grid>\n        <Grid item xs={6} container direction=\"column\" spacing={3}>\n          <Grid item>\n            <RealmsFeed />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Grid, Typography, Divider } from \"@mui/material\";\n// Should be replace with something else\nimport { iTransaction } from \"../types\";\n\nconst transaction: iTransaction = {\n  hash: \"0x00\",\n  timeStamp: Date.now(),\n  from: \"0x01\",\n  to: \"0x02\",\n  value: 0.1,\n  status: \"success\",\n  txFee: 0.0001,\n  gasPrice: 0.001,\n};\n\nconst Transactions = () => {\n  const { id } = useParams();\n\n  return (\n    <Grid container direction=\"column\" spacing={4}>\n      {/* Transaction Hash */}\n      <Grid\n        item\n        container\n        spacing={5}\n        alignContent=\"center\"\n        alignItems={\"center\"}\n      >\n        <Grid item xs={3}>\n          <Typography variant=\"h6\" color=\"initial\">\n            Transactions Hash:\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body1\">{transaction.hash}</Typography>\n        </Grid>\n      </Grid>\n      {/* Status */}\n      <Grid\n        item\n        container\n        spacing={5}\n        alignContent=\"center\"\n        alignItems={\"center\"}\n      >\n        <Grid item xs={3}>\n          <Typography variant=\"h6\" color=\"initial\">\n            Status:\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body1\">{transaction.status}</Typography>\n        </Grid>\n      </Grid>\n      {/* Timestamp */}\n      <Grid\n        item\n        container\n        spacing={5}\n        alignContent=\"center\"\n        alignItems={\"center\"}\n      >\n        <Grid item xs={3}>\n          <Typography variant=\"h6\" color=\"initial\">\n            Timestamp:\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body1\">{transaction.timeStamp}</Typography>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Divider />\n      </Grid>\n      {/* From */}\n      <Grid\n        item\n        container\n        spacing={5}\n        alignContent=\"center\"\n        alignItems={\"center\"}\n      >\n        <Grid item xs={3}>\n          <Typography variant=\"h6\" color=\"initial\">\n            From:\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography\n            variant=\"body1\"\n            component={Link}\n            to={`/random/addr/${transaction.from}`}\n          >\n            {transaction.from}\n          </Typography>\n        </Grid>\n      </Grid>\n      {/* To */}\n      <Grid\n        item\n        container\n        spacing={5}\n        alignContent=\"center\"\n        alignItems={\"center\"}\n      >\n        <Grid item xs={3}>\n          <Typography variant=\"h6\" color=\"initial\">\n            To:\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography\n            variant=\"body1\"\n            component={Link}\n            to={`/random/addr/${transaction.to}`}\n          >\n            {transaction.to}\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Divider />\n      </Grid>\n      {/* Value */}\n      <Grid\n        item\n        container\n        spacing={5}\n        alignContent=\"center\"\n        alignItems={\"center\"}\n      >\n        <Grid item xs={3}>\n          <Typography variant=\"h6\" color=\"initial\">\n            Value:\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body1\">{transaction.value}</Typography>\n        </Grid>\n      </Grid>\n      {/* Tx fee */}\n      <Grid\n        item\n        container\n        spacing={5}\n        alignContent=\"center\"\n        alignItems={\"center\"}\n      >\n        <Grid item xs={3}>\n          <Typography variant=\"h6\" color=\"initial\">\n            Transaction fee:\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body1\">{transaction.txFee}</Typography>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Divider />\n      </Grid>\n      {/* Gas price */}\n      <Grid\n        item\n        container\n        spacing={5}\n        alignContent=\"center\"\n        alignItems={\"center\"}\n      >\n        <Grid item xs={3}>\n          <Typography variant=\"h6\" color=\"initial\">\n            Gas price:\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body1\">{transaction.gasPrice}</Typography>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Transactions;\n","import React from \"react\";\nimport {\n  Grid,\n  Typography,\n  Divider,\n  Table,\n  TableBody,\n  TableHead,\n  TableContainer,\n  TableRow,\n  TableCell,\n  Paper,\n} from \"@mui/material\";\n// Should be replace with something else\nimport { iRealm } from \"../types\";\n\nconst realm: iRealm = {\n  name: \"Runtera\",\n  numOfValidators: 10,\n  transactionsPerSecond: 4890,\n  uniqueAddresses: 1000,\n  activeAddresses: 500,\n  timeToFinality: 0.701,\n  validatorsActions: [\n    {\n      id: 1,\n      validatorName: \"Validator 1\",\n      validatorAction: \"Reward\",\n      value: 0.8,\n    },\n    {\n      id: 2,\n      validatorName: \"Validator 2\",\n      validatorAction: \"Penalty\",\n      value: 1.5,\n    },\n    {\n      id: 3,\n      validatorName: \"Validator 3\",\n      validatorAction: \"Reward\",\n      value: 1,\n    },\n    {\n      id: 4,\n      validatorName: \"Validator 1\",\n      validatorAction: \"Penalty\",\n      value: 2,\n    },\n  ],\n};\n\nconst validators = [\"Validator 1\", \"Validator 2\", \"Validator 3\", \"Validator 4\"];\n\nconst Realms = () => {\n  return (\n    <Grid container direction=\"column\" spacing={10}>\n      <Grid item>\n        <Typography variant=\"h4\">{realm.name}</Typography>\n      </Grid>\n      <Grid item container spacing={4}>\n        <Grid item xs={6} container direction=\"column\" spacing={2}>\n          <Grid item>\n            <Typography variant=\"h6\">Overview</Typography>\n          </Grid>\n          <Grid item>\n            <Divider />\n          </Grid>\n          {/* Numer of validators */}\n          <Grid item container>\n            <Grid item xs={4}>\n              <Typography variant=\"body1\">Number of validators: </Typography>\n            </Grid>\n            <Grid item xs={8}>\n              <Typography variant=\"body1\">{realm.numOfValidators}</Typography>\n            </Grid>\n          </Grid>\n          {/* Unique addresses */}\n          <Grid item container>\n            <Grid item xs={4}>\n              <Typography variant=\"body1\">Unique addresses: </Typography>\n            </Grid>\n            <Grid item xs={8}>\n              <Typography variant=\"body1\">{realm.uniqueAddresses}</Typography>\n            </Grid>\n          </Grid>\n          {/* Active address */}\n          <Grid item container>\n            <Grid item xs={4}>\n              <Typography variant=\"body1\">Active addresses: </Typography>\n            </Grid>\n            <Grid item xs={8}>\n              <Typography variant=\"body1\">{realm.activeAddresses}</Typography>\n            </Grid>\n          </Grid>\n          {/* Time to finality */}\n          <Grid item container>\n            <Grid item xs={4}>\n              <Typography variant=\"body1\">Time to finality: </Typography>\n            </Grid>\n            <Grid item xs={8}>\n              <Typography variant=\"body1\">{realm.timeToFinality}</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={6} container direction=\"column\" spacing={2}>\n          <Grid item>\n            <Typography variant=\"h6\">Validators</Typography>\n          </Grid>\n          <Grid item>\n            <Divider />\n          </Grid>\n          {validators.map((val, idx) => (\n            <Grid item>\n              <Typography variant=\"body1\">{val}</Typography>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n      <Grid item container direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Recent activities</Typography>\n        </Grid>\n        <Grid item>\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Id</TableCell>\n                  <TableCell>Validator</TableCell>\n                  <TableCell>Action</TableCell>\n                  <TableCell>Value</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {realm.validatorsActions.map((val, idx) => (\n                  <TableRow>\n                    <TableCell>{val.id}</TableCell>\n                    <TableCell>{val.validatorName}</TableCell>\n                    <TableCell>{val.validatorAction}</TableCell>\n                    <TableCell>{val.value}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Realms;\n","import React from \"react\";\nimport {\n  Grid,\n  Typography,\n  Divider,\n  Table,\n  TableBody,\n  TableHead,\n  TableContainer,\n  TableRow,\n  TableCell,\n  Paper,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { iAddress } from \"../types\";\n\nconst address: iAddress = {\n  hash: \"0x0\",\n  balance: 1000,\n  value: 1000,\n  tokens: [\n    {\n      name: \"Token 1\",\n      amount: 100,\n    },\n    {\n      name: \"Token 2\",\n      amount: 200,\n    },\n  ],\n  transactions: [\n    {\n      hash: \"0x00\",\n      timeStamp: 1655747223,\n      from: \"0x01\",\n      to: \"0x02\",\n      value: 0.1,\n      status: \"success\",\n      txFee: 0.0001,\n      gasPrice: 0.001,\n    },\n    {\n      hash: \"0x00\",\n      timeStamp: 1655747223,\n      from: \"0x01\",\n      to: \"0x02\",\n      value: 0.1,\n      status: \"success\",\n      txFee: 0.0001,\n      gasPrice: 0.001,\n    },\n  ],\n};\n\nconst Addresses = () => {\n  return (\n    <Grid container direction=\"column\" spacing={10}>\n      <Grid item>\n        <Typography variant=\"h4\">Address: {address.hash}</Typography>\n      </Grid>\n      <Grid item container spacing={4}>\n        <Grid item xs={6} container direction=\"column\" spacing={2}>\n          <Grid item>\n            <Typography variant=\"h6\">Overview</Typography>\n          </Grid>\n          <Grid item>\n            <Divider />\n          </Grid>\n          <Grid item container>\n            <Grid item xs={4}>\n              <Typography variant=\"body1\">Balance:</Typography>\n            </Grid>\n            <Grid item xs={8}>\n              <Typography variant=\"body1\">{address.balance} MIND</Typography>\n            </Grid>\n          </Grid>\n          <Grid item container>\n            <Grid item xs={4}>\n              <Typography variant=\"body1\">Value:</Typography>\n            </Grid>\n            <Grid item xs={8}>\n              <Typography variant=\"body1\">${address.value}</Typography>\n            </Grid>\n          </Grid>\n          <Grid item container>\n            <Grid item xs={4}>\n              <Typography variant=\"body1\">Token:</Typography>\n            </Grid>\n            <Grid item xs={8}>\n              <Select sx={{ width: \"100%\", height: \"25px\" }}>\n                {address.tokens.map((token, idx) => (\n                  <MenuItem value={token.amount}>\n                    {token.name}: {token.amount}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={6} container direction=\"column\" spacing={2}>\n          <Grid item>\n            <Typography variant=\"h6\">More info</Typography>\n          </Grid>\n          <Grid item>\n            <Divider />\n          </Grid>\n          <Grid item container>\n            <Grid item xs={4}>\n              <Typography variant=\"body1\">My name tag:</Typography>\n            </Grid>\n            <Grid item xs={8}>\n              <Typography variant=\"body1\">Vitalik</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item container direction=\"column\" spacing={2}>\n        <Grid item>\n          <Typography variant=\"h6\">Transactions</Typography>\n        </Grid>\n        <Grid item>\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Txn Hash</TableCell>\n                  <TableCell>Age</TableCell>\n                  <TableCell>From</TableCell>\n                  <TableCell>To</TableCell>\n                  <TableCell>Value</TableCell>\n                  <TableCell>Txn Fee</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {address.transactions.map((val, idx) => (\n                  <TableRow key={`transaction-${idx}`}>\n                    <TableCell>\n                      <Typography\n                        component={Link}\n                        to={`/random/tx/${val.hash}`}\n                      >\n                        {val.hash}\n                      </Typography>\n                    </TableCell>\n                    <TableCell>\n                      {Number(Date.now() / 1000 - val.timeStamp).toFixed()}{\" \"}\n                      seconds\n                    </TableCell>\n                    <TableCell>\n                      <Typography\n                        component={Link}\n                        to={`/random/addr/${val.from}`}\n                      >\n                        {val.from}\n                      </Typography>\n                    </TableCell>\n                    <TableCell>\n                      <Typography\n                        component={Link}\n                        to={`/random/addr/${val.from}`}\n                      >\n                        {val.from}\n                      </Typography>\n                    </TableCell>\n                    <TableCell>{val.value}</TableCell>\n                    <TableCell>{val.txFee}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Addresses;\n","import React, { useState, useEffect } from \"react\";\nimport { Typography, Grid, Button } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nconst AppHeader = () => {\n  const [time, setTime] = useState<number>();\n\n  useEffect(() => {\n    setTime(Date.now());\n    setInterval(() => {\n      setTime(Date.now());\n    }, 1000);\n  }, []);\n\n  return (\n    <Grid\n      container\n      spacing={5}\n      justifyContent=\"space-evenly\"\n      alignItems=\"center\"\n      sx={{ marginBottom: \"5vh\" }}\n    >\n      <Grid item xs={2}>\n        <Typography variant=\"h3\" color=\"initial\">\n          Astralscan\n        </Typography>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography variant=\"h5\" color=\"initial\">\n          Chain time: {time}\n        </Typography>\n      </Grid>\n      <Grid item container xs={6}>\n        <Grid item>\n          <Button variant=\"contained\" component={Link} to=\"/random\">\n            Home\n          </Button>\n        </Grid>\n        <Grid item>\n          {\" \"}\n          <Button variant=\"contained\" component={Link} to=\"/random/addr\">\n            Addresses\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" component={Link} to=\"/random/tx\">\n            Transactions\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" component={Link} to=\"/random/rlm\">\n            Realms\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AppHeader;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { Container } from \"@mui/material\";\nimport Main from \"./pages/Main\";\nimport Transactions from \"./pages/Transactions\";\nimport Realms from \"./pages/Realms\";\nimport Addresses from \"./pages/Addresses\";\nimport AppHeader from \"./components/AppHeader\";\n\nfunction App() {\n  return (\n    <Container sx={{ maxWidth: \"1400px !important\" }}>\n      <Router>\n        <AppHeader />\n        <Routes>\n          <Route path=\"/random/\" element={<Main />} />\n          <Route path=\"/random/tx\" element={<Transactions />} />\n          <Route path=\"/random/tx/:id\" element={<Transactions />} />\n          <Route path=\"/random/addr\" element={<Addresses />} />\n          <Route path=\"/random/addr/:id\" element={<Addresses />} />\n          <Route path=\"/random/rlm\" element={<Realms />} />\n          <Route path=\"/random/rlm/:id\" element={<Realms />} />\n        </Routes>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}